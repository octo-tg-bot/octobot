# This is a basic workflow to help you get started with Actions

name: Docker

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch: # on button click
  pull_request: # PRs
  push:
    branches:
      - master
    paths:
      - '**.py'
      - 'requirements*.txt'
      - '.github/workflows/docker.yml'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    name: Build docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.USER_GH_TOKEN }}
      - name: Publish to Registry
        uses: docker/build-push-action@v2
        with:
          tags: ghcr.io/octo-tg-bot/octotgbot:latest
          build-args: |
            CI=true
            GITHUB_SHA=${{ github.sha }}
            GITHUB_RUN_NUMBER=${{ github.run_number }}
            GITHUB_REF=${{ github.ref }}
          push: ${{ github.event_name == 'push' }}
          target: release
  deployment:
    name: Deploy docker image
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}

    steps:
      - name: start deployment
        uses: bobheadxi/deployments@master
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: telegram

      - name: Send request to Watchtower HTTP API
        run: 'curl -H "Token: ${{ secrets.WT_TOKEN }}" ${{ secrets.WT_URL }}'

      - name: update deployment status
        uses: bobheadxi/deployments@master
        if: always()
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
