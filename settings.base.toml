# Telegram bot API token
telegram_token = ""

# Set to true if in production
production = false

# Telegram bot owner ID
owner = 0

# Telegram API endpoint
# Change if using local Bot API
# Notice that the call to api.telegram.org/botTOKEN/logout will be made to log out
telegram_base_url = "https://api.telegram.org/bot"
telegram_base_file_url = "https://api.telegram.org/file/bot"
# If base file url should be set forcefully without appending token, for example if you are selfhosting bot api with --local
telegram_base_file_url_force = false
# Thread amount
threads = 4

# Plugins not to load
exclude_plugins = []

# Support URL
support_url = "https://example.com"

# User-Agent used for cached requests
user_agent = "OctoBot/4.0"

# Apex Legends API token for apex.py plugin
# Get token @ https://apexlegendsapi.com/
mozamibque_here_token = ""

# API Key for currency converter
currency_converter_apikey = ""

# Imgur API Client-ID
imgur_clientid = ""

# Allow only specific chats
# If this value != [], then bot will attempt to leave all chats that are not in this list
allowed_chats = []
# Reason for bot leaving if allowed_chats != []
disallowed_chat_reason = "I am sorry, I can't work in this chat cause it is not in allowed chats list."

# Fallback image when bot failed to send image
no_image = "https://gitlab.com/OctoNezd/octonezd.gitlab.io/-/raw/master/public/no_image.png"

[sentry]
  # If sentry exception reporting should be enabled or not
  enabled = false
  # Sentry exception report DSN
  dsn = ''
  # Sentry organization slug
  organization_slug = ''
  # Sentry project slug
  project_slug = ''

# Redis information
[redis]
  host = "localhost"
  port = 6379
  db = 0

# Spamwatch settings
[spamwatch]
  # Default value is https://api.spamwat.ch
  # You shouldn't change it in normal circumstances unless using staging API to test
  api_host = "https://api.spamwat.ch"
  # Spamwatch API token. Get it at t.me/SpamWatchBot
  token = "not set"
  # Default action
  # Supported values: kick, ban, nothing
  default_action = "kick"

# Ratelimiting
[ratelimit]
  enabled = true
  # How many messages before blocking
  messages_threshold = 5
  # Timeframe in seconds
  messages_timeframe = 5
  # Ban time in seconds
  ban_time = 60
  # Leave and block chat if the admins are abusing bot
  adm_abuse_leave = true
